/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/allprojects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Projects */
        get: operations["get_all_projects_api_allprojects_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/project/setup_state": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project Setup State */
        get: operations["get_project_setup_state_api_project_setup_state_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/project/id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project Id */
        get: operations["get_project_id_api_project_id_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/project/name": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project Name */
        get: operations["get_project_name_api_project_name_get"];
        /** Put Project Name */
        put: operations["put_project_name_api_project_name_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/project/paths": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project Paths */
        get: operations["get_project_paths_api_project_paths_get"];
        /** Update Project Paths */
        put: operations["update_project_paths_api_project_paths_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/project/filmdata": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project Filmdata */
        get: operations["get_project_filmdata_api_project_filmdata_get"];
        /** Put Project Filmdata */
        put: operations["put_project_filmdata_api_project_filmdata_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/project/state": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project State */
        get: operations["get_project_state_api_project_state_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/project/perf/location": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Perf Location */
        get: operations["get_perf_location_api_project_perf_location_get"];
        /** Put Perf Location */
        put: operations["put_perf_location_api_project_perf_location_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/project/perf/detect": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Post Perfdetect */
        post: operations["post_perfdetect_api_project_perf_detect_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/project/scanarea": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Scanarea
         * @description Get the camera Scanarea, the area that defines the film frame content to be used.
         *     All values are normalized (ref_delta: between -1 and 1, size: between 0 and 1) and
         *     independent of the select camera image resolution.
         */
        get: operations["get_scanarea_api_project_scanarea_get"];
        /**
         * Put Scanarea
         * @description Set the ScanArea, the area that defines the film frame content to be used.
         *     All values are normalized (between 0 and 1) to be independent of the select camera image resolution.
         *         - ref_delta: The delta between the Perforation reference point and the top left point of the scan area.
         *         - size: The size of the scan area.
         */
        put: operations["put_scanarea_api_project_scanarea_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Error */
        Error: {
            /**
             * Msg
             * @default
             */
            msg: string;
        };
        /** FilmData */
        FilmData: {
            /**
             * Date
             * @default June 1977
             */
            date: string;
            /**
             * Author
             * @default
             */
            author: string;
            /**
             * Description
             * @default
             */
            description: string;
            /**
             * Format
             * @default super8
             */
            format: components["schemas"]["FilmFormat"] | string;
            /**
             * Stock
             * @default
             */
            stock: string;
            /**
             * Fps
             * @default 18
             */
            fps: number;
            /**
             * Tags
             * @default []
             */
            tags: string[];
        };
        /**
         * FilmFormat
         * @enum {string}
         */
        FilmFormat: "super8" | "normal8" | "normal16" | "unspecified";
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** OffsetPoint */
        OffsetPoint: {
            /**
             * Dx
             * @default 0
             */
            dx: number;
            /**
             * Dy
             * @default 0
             */
            dy: number;
        };
        /** PerforationLocation */
        PerforationLocation: {
            /**
             * Top Edge
             * @default 0
             */
            top_edge: number;
            /**
             * Bottom Edge
             * @default 0
             */
            bottom_edge: number;
            /**
             * Inner Edge
             * @default 0
             */
            inner_edge: number;
            /**
             * Outer Edge
             * @default 0
             */
            outer_edge: number;
            /** @description Reference point for the scan area */
            reference: components["schemas"]["Point"];
        };
        /** Point */
        Point: {
            /**
             * X
             * @default 0
             */
            x: number;
            /**
             * Y
             * @default 0
             */
            y: number;
        };
        /** ProjectId */
        ProjectId: {
            /**
             * Id
             * @default
             */
            id: number;
        };
        /** ProjectName */
        ProjectName: {
            /**
             * Name
             * @default
             */
            name: string;
        };
        /** ProjectPaths */
        ProjectPaths: {
            /**
             * Scanned Images
             * @default images_raw
             */
            scanned_images: string;
            /**
             * Processed Images
             * @default images_processed
             */
            processed_images: string;
        };
        /** ProjectSetupState */
        ProjectSetupState: {
            /**
             * Scanareaset
             * @default false
             */
            scanAreaSet: boolean;
            /**
             * Perforationlocationset
             * @default false
             */
            perforationLocationSet: boolean;
            /**
             * Cameraset
             * @default false
             */
            cameraSet: boolean;
            /**
             * Whitebalanceset
             * @default false
             */
            whiteBalanceSet: boolean;
            /**
             * Pathsset
             * @default false
             */
            pathsSet: boolean;
            /**
             * Nameset
             * @default false
             */
            nameSet: boolean;
        };
        /** ProjectState */
        ProjectState: {
            /**
             * Current Frame
             * @default 0
             */
            current_frame: number;
            /**
             * Last Scanned Frame
             * @default 0
             */
            last_scanned_frame: number;
            /**
             * Last Processed Frame
             * @default 0
             */
            last_processed_frame: number;
            /** @default not_started */
            state: components["schemas"]["ProjectStateType"];
        };
        /**
         * ProjectStateType
         * @enum {string}
         */
        ProjectStateType: "not_started" | "running" | "paused" | "finished" | "error";
        /** ScanArea */
        ScanArea: {
            /** @description delta from reference point to top left */
            ref_delta: components["schemas"]["OffsetPoint"];
            /** @description width of the scan area */
            size: components["schemas"]["Size"];
        };
        /** Size */
        Size: {
            /**
             * Width
             * @default 0
             */
            width: number;
            /**
             * Height
             * @default 0
             */
            height: number;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_all_projects_api_allprojects_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: number;
                    };
                };
            };
        };
    };
    get_project_setup_state_api_project_setup_state_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectSetupState"];
                };
            };
        };
    };
    get_project_id_api_project_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectId"];
                };
            };
        };
    };
    get_project_name_api_project_name_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectName"];
                };
            };
        };
    };
    put_project_name_api_project_name_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProjectName"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectName"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_project_paths_api_project_paths_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectPaths"];
                };
            };
        };
    };
    update_project_paths_api_project_paths_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProjectPaths"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectPaths"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_project_filmdata_api_project_filmdata_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FilmData"];
                };
            };
        };
    };
    put_project_filmdata_api_project_filmdata_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FilmData"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FilmData"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_project_state_api_project_state_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectState"];
                };
            };
        };
    };
    get_perf_location_api_project_perf_location_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PerforationLocation"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    put_perf_location_api_project_perf_location_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PerforationLocation"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PerforationLocation"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    post_perfdetect_api_project_perf_detect_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Point"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PerforationLocation"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_scanarea_api_project_scanarea_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ScanArea"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    put_scanarea_api_project_scanarea_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScanArea"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ScanArea"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
